// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "research_checker.proto" (package "research_checker", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { ResearchCheckerService } from "./research_checker";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CheckResponse } from "./research_checker";
import type { CheckRequest } from "./research_checker";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service research_checker.ResearchCheckerService
 */
export interface IResearchCheckerServiceClient {
    /**
     * @generated from protobuf rpc: Check(research_checker.CheckRequest) returns (research_checker.CheckResponse);
     */
    check(input: CheckRequest, options?: RpcOptions): UnaryCall<CheckRequest, CheckResponse>;
}
/**
 * @generated from protobuf service research_checker.ResearchCheckerService
 */
export class ResearchCheckerServiceClient implements IResearchCheckerServiceClient, ServiceInfo {
    typeName = ResearchCheckerService.typeName;
    methods = ResearchCheckerService.methods;
    options = ResearchCheckerService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: Check(research_checker.CheckRequest) returns (research_checker.CheckResponse);
     */
    check(input: CheckRequest, options?: RpcOptions): UnaryCall<CheckRequest, CheckResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CheckRequest, CheckResponse>("unary", this._transport, method, opt, input);
    }
}
